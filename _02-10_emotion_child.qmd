## Emotional/Behavioral/Personality {#sec-emotion}

<!-- {{< include _02-10_emotion_child_text.qmd >}} -->

```{r}
#| label: setup-emotion
#| include: false
# domain
domains <- c(
  "Psychiatric Disorders", "Personality Disorders", "Substance Use",
  "Psychosocial Problems", "Behavioral/Emotional/Social", "Emotional/Behavioral/Personality"
)
# phenotype
pheno <- "emotion"
```

```{r}
#| label: export-emotion
#| include: false
#| eval: false
emotion <- readr::read_csv("neurobehav.csv") |>
  dplyr::filter(domain %in% domains) |>
  dplyr::filter(!is.na(z_mean_domain)) |>
  dplyr::select(
    scale, score, z, percentile, range, test_name,
    domain, subdomain, narrow, result,
    z_mean_domain, z_sd_domain, z_mean_subdomain,
    z_sd_subdomain, z_mean_narrow, z_sd_narrow
  )
readr::write_csv(emotion, paste0(pheno, ".csv"))
```

```{r}
#| label: data-emotion
#| include: false

data <- bwu::read_data(pheno = pheno)
scales <- c(
  "Activity Level",
  "Affective (A)",
  "Affective (D)",
  "Affective Instability",
  "Aggression",
  "Aggressive Attitude",
  "ALC Estimated Score",
  "Alcohol Problems",
  "Antisocial Behaviors",
  "Antisocial Features",
  "Anxiety-Related Disorders",
  "Anxiety",
  "Borderline Features",
  "Cognitive (A)",
  "Cognitive (D)",
  "Conversion",
  "Depression",
  "Dominance",
  "DRG Estimated Score",
  "Drug Problems",
  "Egocentricity",
  "Grandiosity",
  "Health Concerns",
  "Hypervigilance",
  "Identity Problems",
  "Irritability",
  "Mania",
  "Negative Relationships",
  "Nonsupport",
  "Obsessive-Compulsive",
  "Paranoia",
  "Persecution",
  "Phobias",
  "Physical Aggression",
  "Physiological (A)",
  "Physiological (D)",
  "Psychotic Experiences",
  "Resentment",
  "Schizophrenia",
  "Self-Harm",
  "Social Detachment",
  "Somatic Complaints",
  "Somatization",
  "Stimulus-Seeking",
  "Stress",
  "Suicidal Ideation",
  "Thought Disorder",
  "Traumatic Stress",
  "Treatment Rejection",
  "Verbal Aggression",
  "Warmth",
  "BAI Total Score",
  "BDI-2 Total Score",
  "Activities of Daily Living",
  "Adaptability",
  "Adaptive Skills",
  "Aggression",
  "Anxiety",
  "Attention Problems",
  "Attitude to School",
  "Attitude to Teachers",
  "Atypicality",
  "Behavioral Symptoms Index",
  "Conduct Problems",
  "Depression",
  "Emotional Symptoms Index",
  "Externalizing Problems",
  "Functional Communication",
  "Hyperactivity",
  "Inattention/Hyperactivity",
  "Internalizing Problems",
  "Interpersonal Relations",
  "Leadership",
  "Locus of Control",
  "Personal Adjustment",
  "Relations with Parents",
  "School Problems",
  "Self-Esteem",
  "Self-Reliance",
  "Sensation Seeking",
  "Sense of Inadequacy",
  "Social Skills",
  "Social Stress",
  "Somatization",
  "Withdrawal"
)
data_emotion <-
  bwu::filter_data(
    data,
    domain = domains,
    scale = scales
  )
```

```{r}
#| label: text-emotion
#| cache: true
#| include: false

df_self <- dplyr::filter(data_emotion, test_name == "BASC-3 SRP")
bwu::cat_neuropsych_results(
  data = df_self,
  file = "_02-10_emotion_text.qmd"
)

df_parent <- dplyr::filter(data_emotion, test_name == "BASC-3 PRS")
bwu::cat_neuropsych_results(
  data = df_parent,
  file = "_02-10_emotion_text.qmd"
)
```

```{r}
#| label: qtbl-emotion-self
#| dev: tikz
#| fig-process: pdf2png
#| eval: true
#| include: false
options(tikzDefaultEngine = "xetex")

# vars
pheno <- "emotion_self"
source_note <- gt::md("_T_-Score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰].

Personal Adjustment scores are reversed.")
# fn_t_score <- gt::md("_T_-Score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰]")
table_name <- "table_emotion_self"
vertical_padding <- 0
grp_emotion <- list(
  t_score = c("PAI", "BASC-3 SRP")
)
multiline <- FALSE

data_emotion_self <-
  dplyr::filter(
    data_emotion,
    domain %in% c(
      "Psychiatric Disorders",
      "Personality Disorders",
      "Substance Use",
      "Behavioral/Emotional/Social",
      "Emotional/Behavioral/Personality"
    )
  ) |>
  dplyr::filter(test_name %in% c("PAI", "BASC-3 SRP")) |>
  dplyr::arrange(absort) |>
  dplyr::arrange(subdomain)

library(gt)
library(dplyr)
library(glue)

# # Define broad domain categories
# broad_domains <- c("School Problems", "Internalizing Problems", "Inattention/Hyperactivity", "Emotional Symptoms Index", "Personal Adjustment")

# # Create a new column to identify broad domains and subscales
# data_emotion_self <- data_emotion_self |>
#   dplyr::mutate(is_broad_domain = scale %in% broad_domains)

bwu::tbl_gt(
  data = data_emotion_self,
  pheno = pheno,
  table_name = table_name,
  vertical_padding = vertical_padding,
  source_note = source_note,
  grp_t_score = grp_emotion[["t_score"]],
  dynamic_grp = grp_emotion,
  multiline = multiline
)
```

```{r}
#| label: qtbl-emotion-parent
#| dev: tikz
#| fig-process: pdf2png
#| eval: true
#| include: false
options(tikzDefaultEngine = "xetex")

# vars
pheno <- "emotion_parent"
source_note <- gt::md("_T_-Score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰].

Adaptive Skills scores are reversed.")
table_name <- "table_emotion_parent"
vertical_padding <- 0
grp_emotion <- list(
  t_score = c("BASC-3 PRS", "BASC-3 TRS")
)
multiline <- FALSE

data_emotion_parent <-
  dplyr::filter(
    data_emotion,
    domain %in% c(
      "Psychiatric Disorders",
      "Personality Disorders",
      "Substance Use",
      "Behavioral/Emotional/Social",
      "Emotional/Behavioral/Personality"
    )
  ) |>
  dplyr::filter(test_name %in% c("BASC-3 PRS")) |>
  dplyr::arrange(absort) |>
  dplyr::arrange(subdomain)

bwu::tbl_gt(
  data = data_emotion_parent,
  pheno = pheno,
  table_name = table_name,
  vertical_padding = vertical_padding,
  source_note = source_note,
  grp_t_score = grp_emotion[["t_score"]],
  dynamic_grp = grp_emotion,
  multiline = multiline
)
```

```{r}
#| label: fig-emotion-self
#| fig-cap: "Mood/Self-Report"
#| include: false

# args
pheno <- "emotion"
df_self <-
  dplyr::filter(data) |>
  dplyr::filter(test_name == "BASC-3 SRP")

x <- df_self$z_mean_subdomain
y <- df_self$subdomain
colors <- NULL
# return_plot <- TRUE
return_plot <- Sys.getenv("RETURN_PLOT")
filename <- "fig_emotion_self.svg"

# Make dotplot
bwu::dotplot(
  data = df_self,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename
)


x2 <- df_self$z
y2 <- df_self$scale
colors <- NULL
filename <- "fig_emotion_self2.svg"

# Make dotplot
bwu::dotplot(
  data = df_self,
  x = x2,
  y = y2,
  colors = colors,
  return_plot = return_plot,
  filename = filename
)
```

```{r}
#| label: fig-emotion-parent
#| fig-cap: "Mood/Parent-Report"
#| include: false

# args
pheno <- "emotion"
df_parent <-
  dplyr::filter(data) |>
  dplyr::filter(test_name == "BASC-3 PRS")

x <- df_parent$z_mean_subdomain
y <- df_parent$subdomain
colors <- NULL
# return_plot <- TRUE
return_plot <- Sys.getenv("RETURN_PLOT")
filename <- "fig_emotion_parent.svg"

# Make dotplot
bwu::dotplot(
  data = df_parent,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename
)

x2 <- df_parent$z
y2 <- df_parent$scale
colors <- NULL
# return_plot <- TRUE
return_plot <- Sys.getenv("RETURN_PLOT")
filename <- "fig_emotion_parent2.svg"

# Make dotplot
bwu::dotplot(
  data = df_parent,
  x = x2,
  y = y2,
  colors = colors,
  return_plot = return_plot,
  filename = filename
)
```

### PARENT RATINGS

{{< include _02-10_emotion_parent_text.qmd >}}

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Fira Sans", size: 9pt)
  set text(..font)
    grid(
      columns: (50%, 50%),
      gutter: 8pt,
        figure([#image(file_qtbl)],
          caption: figure.caption(position: top, [#title]),
          kind: "qtbl",
          supplement: [Table],
          ),
        figure([#image(file_fig, width: auto)],
          caption: figure.caption(position: bottom, [
            The data presented here is based on Michelle Elliott's rating of Biggie's behavior using the BASC-3 Parent Rating Scales form. Scale scores in the Clinically Significant range suggest a high level of impairment. Scores in the At-Risk range may identify a significant problem that may not be severe enough to require formal treatment or may identify the potential of developing a problem that needs careful monitoring.
            ]),
          placement: none,
          kind: "image",
          supplement: [Figure],
          gap: 0.5em,
        ),
      )
  }
```

```{=typst}
#let title = "BASC-3 Parent Rating Scales"
#let file_qtbl = "table_emotion_parent.png"
#let file_fig = "fig_emotion_parent.svg"
#domain(
  title: [#title],
  file_qtbl,
  file_fig
  )
```

### SELF-REPORT

{{< include _02-10_emotion_child_text.qmd >}}

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Fira Sans", size: 9pt)
  set text(..font)
    grid(
      columns: (50%, 50%),
      gutter: 8pt,
        figure([#image(file_qtbl)],
          caption: figure.caption(position: top, [#title]),
          kind: "qtbl",
          supplement: [Table],
          ),
        figure([#image(file_fig, width: auto)],
          caption: figure.caption(position: bottom, [
            The data presented here is based on Biggie's ratings of herself using the BASC-3 Self-Report of Personality form. Scale scores in the Clinically Significant range suggest a high level of impairment. Scores in the At-Risk range may identify a significant problem that may not be severe enough to require formal treatment or may identify the potential of developing a problem that needs careful monitoring.
            ]),
          placement: none,
          kind: "image",
          supplement: [Figure],
          gap: 0.5em,
        ),
      )
  }
```

```{=typst}
#let title = "BASC-3 Self-Report of Personality"
#let file_qtbl = "table_emotion_self.png"
#let file_fig = "fig_emotion_self.svg"
#domain(
  title: [#title],
  file_qtbl,
  file_fig
  )
```
